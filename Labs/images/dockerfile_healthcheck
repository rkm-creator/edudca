Dockerfile Content:
==================

FROM nginx:1.17.7
RUN apt-get update && apt-get install -y wget
HEALTHCHECK CMD wget -q --method=HEAD localhost/system-status.txt

Build the image and run the container


#Let’s try to heal the container by creating a sample system-status.txt:
#docker exec docker-health sh -c \
#'echo OK > /usr/share/nginx/html/system-status.txt'
#In the next 30 seconds, the container should be reported as healthy

Health-check parameters:
========================
The HEALTHCHECK command can also be used with four different options:
--interval=DURATION (default: 30s)
--timeout=DURATION (default: 30s)
--start-period=DURATION (default: 0s)
--retries=N (default: 3)

The interval option specifies the number of seconds to initially wait before executing the health check and then the frequency at which subsequent health checks will be performed.
The timeout option specifies the number of seconds Docker awaits for your health check command to return an exit code before declaring it as failed (and your container as unhealthy).
The start-period option specifies the number of seconds your container needs to bootstrap. During this period, health checks with an exit code greater than zero won’t mark the container as unhealthy; however, a status code of 0 will mark the container as healthy.
The retries option specifies the number of consecutive health check failures required to declare the container as unhealthy.


Docker Swarm behaviour
A useful feature of health checks when running containers in Docker Swarm is that for as long as the container is in an unhealthy or (health: starting) status, routing is disabled and no requests reach the container at all.
